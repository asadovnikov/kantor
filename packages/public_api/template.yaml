AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  packages

  Sample SAM Template for packages

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
#https://github.com/heitorlessa/api-lambda-stripe-charge/
ChargeStripeApiWebhook:
  Type: AWS::Serverless::Api
  Properties:
    Cors:
      AllowHeaders: "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'"
      AllowOrigin: !Ref CorsOrigin
      MaxAge: "'3600'"
      AllowMethods: "'OPTIONS,POST'"
    EndpointConfiguration: REGIONAL
    StageName: prod
    TracingEnabled: true
Resources:
  TestCommittedTransactionsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      TableName: TestCommittedTransactions
  ValidateTransactionFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: transaction/validate
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        ValidateTransactionApi:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /transaction/validate
            Method: post
  RegisterTransactionFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: transaction/register
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Environment:
        Variables:
          TABLE_NAME: !Ref TestCommittedTransactionsTable
      Policies:
        - DynamoDBWritePolicy:
          TableName: !Ref TestCommittedTransactionsTable
      Events:
        RegisterTransactionApi:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /transaction/register
            Method: post
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ValidateTransactionApi:
    Description: 'API Gateway endpoint URL for Prod stage for Validate Transaction function'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/transaction/validate/'
  ValidateTransactionFunction:
    Description: 'Validate Transaction Lambda Function ARN'
    Value: !GetAtt ValidateTransactionFunction.Arn
  ValidateTransactionFunctionIamRole:
    Description: 'Implicit IAM Role created for Validate Transaction function'
    Value: !GetAtt ValidateTransactionFunctionRole.Arn
  RegisterTransactionApi:
    Description: 'API Gateway endpoint URL for Prod stage for Register Transaction function'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/transaction/register/'
  RegisterTransactionFunction:
    Description: 'Register Transaction Lambda Function ARN'
    Value: !GetAtt RegisterTransactionFunction.Arn
  RegisterTransactionFunctionIamRole:
    Description: 'Implicit IAM Role created for Register Transaction function'
    Value: !GetAtt RegisterTransactionFunctionRole.Arn
  DynamoDBTableArn:
    Value: !GetAtt DynamoDBTable.Arn
    Description: The ARN of your DynamoDB Table
